<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="RaisedButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border"
                                BorderBrush="Transparent"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Padding" Value="10 6" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="CornerRadius" Value="5" />
                                </Style>
                            </Border.Resources>

                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2"
                                     Direction="1000"
                                     Color="DarkGray"
                                     Opacity="0.6"
                                     BlurRadius="5"/>
                            </Border.Effect>

                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Light-->
    <Style x:Key="LightRaisedButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource RaisedButton}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Danger-->
    <Style x:Key="DangerRaisedButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource RaisedButton}">
        <Setter Property="Background" Value="#f44336" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ab2c22" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Primary-->
    <Style x:Key="PrimaryRaisedButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource RaisedButton}">
        <Setter Property="Background" Value="#3f51b5" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#283479" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Info-->
    <Style x:Key="InfoRaisedButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource RaisedButton}">
        <Setter Property="Background" Value="#1da1f2" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#146fa7" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InfoOutlineRaisedButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource RaisedButton}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="Foreground" Value="#1da1f2" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e0e0e0" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>