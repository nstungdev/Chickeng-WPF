// <auto-generated />
using System;
using Chickeng.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chickeng.Infrastructure.Migrations
{
    [DbContext(typeof(ChickengDbContext))]
    [Migration("20230316145219_Add_Example_Table")]
    partial class AddExampleTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Chickeng.Infrastructure.Entities.Phrase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mean")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pronounce")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tone")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TopicId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Phrases");
                });

            modelBuilder.Entity("Chickeng.Infrastructure.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ForegroundColor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Chickeng.Infrastructure.Entities.Vocabulary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mean")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pronounce")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TopicId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("WordType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Vocabularies");
                });

            modelBuilder.Entity("Chickeng.Infrastructure.Entities.VocabularyHasExample", b =>
                {
                    b.Property<int>("VocabularyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WordExampleId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("VocabularyId", "WordExampleId");

                    b.HasIndex("WordExampleId");

                    b.ToTable("VocabularyHasExamples");
                });

            modelBuilder.Entity("Chickeng.Infrastructure.Entities.WordExample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mean")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WordExamples");
                });

            modelBuilder.Entity("Chickeng.Infrastructure.Entities.Phrase", b =>
                {
                    b.HasOne("Chickeng.Infrastructure.Entities.Topic", "Topic")
                        .WithMany("Phrases")
                        .HasForeignKey("TopicId");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Chickeng.Infrastructure.Entities.Vocabulary", b =>
                {
                    b.HasOne("Chickeng.Infrastructure.Entities.Topic", "Topic")
                        .WithMany("Vocabularies")
                        .HasForeignKey("TopicId");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Chickeng.Infrastructure.Entities.VocabularyHasExample", b =>
                {
                    b.HasOne("Chickeng.Infrastructure.Entities.Vocabulary", "Vocabulary")
                        .WithMany()
                        .HasForeignKey("VocabularyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chickeng.Infrastructure.Entities.WordExample", "Example")
                        .WithMany()
                        .HasForeignKey("WordExampleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Example");

                    b.Navigation("Vocabulary");
                });

            modelBuilder.Entity("Chickeng.Infrastructure.Entities.Topic", b =>
                {
                    b.Navigation("Phrases");

                    b.Navigation("Vocabularies");
                });
#pragma warning restore 612, 618
        }
    }
}
